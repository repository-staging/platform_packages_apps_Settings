<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string name="exploit_protection_category_title">Exploit protection</string>

    <string name="aep_allowed">Allowed</string>
    <string name="aep_blocked">Blocked</string>
    <string name="aep_default">Default (%1$s)</string>
    <string name="aep_disabled">Disabled</string>
    <string name="aep_enabled">Enabled</string>
    <string name="aep_restricted">Restricted</string>

    <string name="aep_confirm_disable_title">Warning</string>
    <string name="aep_confirm_disable_warning_msg">This setting will weaken exploit protections for the selected app.</string>
    <string name="aep_confirm_disable_proceed_btn">Proceed</string>

    <string name="aep_dvr_default_security_setting">Default value can be changed in the %1$s section</string>

    <string name="aep_dvr_compat_config_hardening_opt_in">The selected app is known to be compatible with this setting</string>
    <string name="aep_dvr_compat_config_hardening_opt_out">%1$s by default, because this app is known to need it.
This behavior can be disabled in the %2$s section.</string>

    <string name="aep_dvr_app_is_client_of_gmscore">%1$s by default because this app depends on Play services</string>

    <string name="aep_default_main_switch_block_for_3p_apps">Block for third-party apps by default</string>
    <string name="aep_default_main_switch_restrict_for_3p_apps">Restrict for third-party apps by default</string>
    <string name="aep_default_main_switch_disable_for_3p_apps">Disable for third-party apps by default</string>
    <string name="aep_default_summary_restricted">Restricted by default</string>
    <string name="aep_default_summary_restricted_except_for_gmscore_clients">Restricted by default, except for apps that depend on Play services</string>
    <string name="aep_default_summary_disabled">Disabled by default</string>
    <string name="aep_default_summary_blocked">Blocked by default</string>
    <string name="aep_default_summary_allowed_for_3p_apps">Allowed for third-party apps by default</string>
    <string name="aep_default_summary_enabled_for_3p_apps">Enabled for third-party apps by default</string>

    <string name="aep_ir_exploit_protection_compat_mode">%1$s is enabled</string>

    <string name="aep_compat_mode_title">Exploit protection compatibility mode</string>
    <string name="aep_compat_mode_summary">Improves compatibility by disabling some of the GrapheneOS exploit protections for this app</string>

    <string name="aep_hmalloc">Hardened memory allocator</string>
    <string name="aep_hmalloc_footer">
        Hardened memory allocator (hardened_malloc) provides substantial defenses against the most common classes of vulnerabilities (heap memory corruption) along with reducing the lifetime of sensitive data in memory.</string>
    <string name="aep_hmalloc_ir_no_native_code">This app doesn’t have native code</string>
    <string name="aep_hmalloc_ir_32_bit_native_code">This is a 32-bit app, hardened_malloc is 64-bit only</string>
    <string name="aep_hmalloc_ir_preinstalled_app">hardened_malloc is not allowed to be disabled for a preinstalled app</string>
    <string name="aep_hmalloc_ir_debuggable_app">This is a debuggable app, hardened_malloc can’t be disabled</string>

    <string name="aep_ext_va_space">Extended virtual address space</string>
    <string name="aep_ext_va_space_footer">Extends virtual address space from 39 to 48 bits, which significantly improves the address space layout randomization.</string>
    <string name="aep_ext_va_space_ir_32_bit_native_code">Incompatible with 32-bit apps</string>
    <string name="aep_ext_va_space_ir_hardened_malloc">Required by hardened_malloc</string>

    <string name="aep_native_debug_title">Native code debugging</string>
    <string name="aep_native_debug_notif_toggle_title">Show notifications about blocked access attempts</string>
    <string name="aep_native_debug_footer">
Native code debugging (ptrace) slightly weakens the app sandbox. Some apps (most notably banking apps) use it as a tampering detection tool.
    </string>
    <string name="aep_native_debug_dvr_is_system_app">Native debugging is always blocked for preinstalled apps</string>

    <string name="aep_memtag">Memory tagging</string>
    <string name="aep_memtag_notif_toggle_time">Show notifications about detected errors</string>
    <string name="aep_memtag_footer">Memory tagging provides strong protections against exploitation of heap memory bugs (e.g. use-after-free, buffer overflow).</string>
    <string name="aep_memtag_dvr_is_system_app">Memory tagging is always enabled for preinstalled apps</string>
    <string name="aep_memtag_dvr_no_native_code">Memory tagging is always enabled for apps that don’t have native code</string>
    <string name="aep_memtag_dvr_manifest_opt_in">This app has opted-in to memory tagging</string>

    <string name="aep_default_memtag_main_switch_title">Enable by default</string>
    <string name="aep_default_memtag_main_switch_summary">
        This setting doesn’t apply to apps that are known to be compatible with memory tagging</string>
    <string name="aep_default_memtag_footer">"Memory tagging provides strong protections against exploitation of heap memory bugs (e.g. use-after-free, buffer overflow).

Memory tagging is always enabled for preinstalled apps and for third-party apps that are known to be
compatible with it (e.g. apps that don’t have native code), regardless of this setting."</string>
    <string name="aep_default_memtag_summary_on">Enabled by default</string>
    <string name="aep_default_memtag_summary_off">
        Disabled by default, except for apps that are known to be compatible with memory tagging</string>

    <string name="dcl_notif_toggle_title">Show notifications about blocked DCL attempts</string>
    <string name="aep_default_dcl_footer_ending">This setting doesn’t apply to preinstalled apps, which are always restricted from performing DCL.</string>

    <string name="aep_memory_dcl">Dynamic code loading via memory</string>
    <string name="aep_memory_dcl_short">DCL via memory</string>
    <string name="aep_memory_dcl_dvr_is_system_app">DCL via memory is always restricted for this preinstalled app</string>
    <string name="aep_memory_dcl_footer">
"Dynamic code loading (DCL) via memory is usually performed by apps that use just-in-time (JIT) compilation to run code from outside their APKs.
DCL makes the app more vulnerable to exploitation, since the dynamically loaded code can be tampered with or substituted."
    </string>

    <string name="aep_storage_dcl">Dynamic code loading via storage</string>
    <string name="aep_storage_dcl_short">DCL via storage</string>
    <string name="aep_storage_dcl_dvr_is_system_app">DCL via storage is always restricted for this preinstalled app</string>
    <string name="aep_storage_dcl_footer">
"Dynamic code loading (DCL) via storage refers to the app's ability to run third-party code from files that are not its APKs.
DCL makes the app more vulnerable to exploitation, since the dynamically loaded code can be tampered with or substituted.

Most apps that depend on Play services require DCL via storage to be allowed."
    </string>

    <string name="aep_webview_jit">WebView JIT</string>
    <string name="aep_webview_jit_footer">
"WebView is an OS component that is used for displaying web content inside apps.
Just-in-time code compilation (JIT) significantly improves the WebView performance, but makes the app more vulnerable to exploitation.

This setting doesn’t apply to preinstalled apps, WebView JIT is always disabled for the vast majority of them."
    </string>

</resources>
